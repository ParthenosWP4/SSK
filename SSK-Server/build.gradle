buildscript {
    ext {
        springBootVersion = '1.5.7.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'war'
war {
    baseName = 'ssk_services'
    version = '0.0.1'
}

apply plugin: 'java'


configurations {
    jaxDoclet
}

apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
repositories {
    mavenCentral()
}

sourceSets {
    build {
        resources {
            srcDirs "src/main/resources"
        }
    }
}

dependencies{



    /*These two cannot be used either for deployment with an integrated tomcat nor for an external web server.*/
    if(onD4Science == true) {
        providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat:1.5.7.RELEASE'
        providedRuntime 'org.slf4j:slf4j-api:1.7.25'
    }
    else{
        compile group: 'org.springframework.boot', name: "spring-boot-starter", version: '1.5.7.RELEASE'
    }

    compile group: 'org.springframework.boot', name: "spring-boot-starter-web", version: '1.5.7.RELEASE'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-elasticsearch
    // compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-elasticsearch', version: '1.5.2.RELEASE'


    // https://mvnrepository.com/artifact/net.java.dev.jna/jna
    runtime group: 'net.java.dev.jna', name: 'jna'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.0'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.8.7'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.8.7'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.8.7'

    //compile 'com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.5.2'

    // https://mvnrepository.com/artifact/org.json/json
    compile group: 'org.json', name: 'json', version: '20160810'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter

    // https://mvnrepository.com/artifact/org.w3c/dom
    compile group: 'org.w3c', name: 'dom', version: '2.3.0-jaxb-1.0.6'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    compile group: 'org.jsoup', name: 'jsoup', version: '1.10.2'

    // https://mvnrepository.com/artifact/org.slf4j/log4j-over-slf4j
    //compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'

    // https://mvnrepository.com/artifact/org.slf4j/jul-to-slf4j
    //compile group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.25'

    compile 'commons-logging:commons-logging:1.2'
    //compile group: 'ch.qos.logback', name: 'logback-classic'

}

if(onD4Science == true) {
    configurations.all {
        exclude module: 'logback-classic'
        exclude module: 'jul-to-slf4j'
        exclude module: 'jcl-over-slf4j'
    }
}


task myJavadocs(type: Javadoc) {
    source = sourceSets.main.allJava
    classpath = configurations.compile
}


//gradle build -PonD4Science=false